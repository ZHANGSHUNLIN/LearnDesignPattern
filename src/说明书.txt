抽象工厂类
    一般用于一个产品族中 例如：

    小米（‘假如’有自己的几个工厂）
        我们在oop的思想上考虑的话。

            这些工厂都是假如的：
                有的做小米手机的壳子
                有的做小米手机的屏幕
                有的。。。 （不同的工厂）

        我们方便管理工厂 给工厂定性（一个抽象类 JiaRuAbstractFactory） 实际意义就是继承这个类的工厂都是假如的  （对应）

        有一个屏幕工厂 （类 ScreenFactory 继承 JiaRuAbstractFactory） 这个屏幕工厂就是假如的了

        有一个手机壳工厂 （类 ShellFactory 继承 JiaRuAbstractFactory） 这个手机壳工厂就是假如的了

            这些类统一由 （类 FactoryProducer） 来对工厂们的分配，当我们需要用屏幕工厂时就会返回屏幕工厂的实例



        abstractfactoryparttern
            |
            |
            |_________factory                   //  所有的工厂相关的包
            |           |
            |           |
            |           |______expandfactory    //  拓展工厂包，相当于假如的所有实体工厂
            |           |
            |           |
            |           |______producer         //  工程生成器包  相当于假如接单，然后根据业务使用（返回实例）相对应的工厂
            |
            |
            |_________implementses              //  返回实例    相当于假如的产品字典（能生产的产品）
            |
            |
            |_________interfaces                //  接口包     类似模板
            |
            |
            |_________run                       //  测试
            |
            |